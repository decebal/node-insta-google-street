(function() {
    function n(a) {
        if (!w) {
            $("#map").show();
            H = $("#pano-box");
            v = $("#map-box");
            T = new h.Geocoder;
            U = new h.StreetViewService;
            ea = new h.places.AutocompleteService;
            g = new h.Map(document.getElementById("map"), {
                mapTypeId: h.MapTypeId.ROAD,
                mapTypeControl: !0,
                streetViewControl: !0,
                minZoom: 1,
                panControl: !1,
                zoomControl: Fa,
                zoomControlOptions: {
                    position: h.ControlPosition.TOP_LEFT,
                    style: h.ZoomControlStyle.SMALL
                },
                styles: [{
                    featureType: "poi.business",
                    stylers: [{
                        visibility: "on"
                    }]
                }]
            });
            fa = new h.Marker({
                map: g
            });
            h.event.addListener(g.overlayMapTypes,
                "insert_at",
                function() {
                    ga && (B = !0);
                    ga = !0
                });
            h.event.addListener(g.overlayMapTypes, "remove_at", function() {
                setTimeout(function() {
                    B = !1
                }, 1E3)
            });
            ha = new h.StreetViewCoverageLayer;
            ha.setMap(g);
            // h.event.addListener(g, "center_changed", $.debounce(100, function() {
            //     var a = g.getCenter();
            //     x && x && h.geometry.spherical.computeDistanceBetween(x, a);
            //     C && C.init();
            //     V(0);
            //     x = a
            // }));
            // h.event.addListener(g, "maptypeid_changed", function() {
            //     I()
            // });
            // h.event.addListener(g, "idle", function() {
            //     info.counts.mc++;
            //     I();
            //     2 == m && $.when(J(g.getCenter())).done(function(a) {
            //         2 ==
            //             m && y(a && a.formatted_address ? a.formatted_address : "")
            //     })
            // });
            h.event.addListener(g, "click", function() {});
            h.event.addListenerOnce(g, "tilesloaded", function() {
                setTimeout(function() {
                    W.stop();
                    $("#mainad iframe").length && $("#hidemainad").setVisible();
                    D()
                }, 250)
            });
            X = new h.places.PlacesService(g);
            ia = new h.MaxZoomService;
            C = new Ga;
            C.init();
            ja();
            panorama.setOptions({
                addressControl: !1,
                imageDateControl: !0,
                mode: "html4",
                pov: {
                    heading: 0,
                    pitch: 0,
                    zoom: 1
                },
                panControl: !0,
                panControlOptions: {
                    position: h.ControlPosition.TOP_LEFT
                },
                zoomControl: !0,
                zoomControlOptions: {
                    position: h.ControlPosition.LEFT_TOP,
                    style: h.ZoomControlStyle.SMALL
                }
            });
            // h.event.addListener(panorama, "position_changed", $.debounce(100, Ha));
            // h.event.addListener(panorama, "visible_changed", $.debounce(100, Ia));
            // h.event.addListener(panorama, "pov_changed", $.debounce(100, function() {
            //     I()
            // }));
            w = !0;
            W.spin($("#container").get(0));
            $("#firstad").remove();
            $("#pano-box,#pano,#actions-box,#menu,#disclaimer").removeClass("initial");
            var e = $("#search-box").css("min-height"),
                f = $("#search-box").css("min-width"),
                i = $("#search-box").offset().top,
                j = $("#search-box").offset().left;
            $("#headline,#hint").remove();
            $("#search-box").removeClass("initial").css({
                top: i,
                left: j
            }).animate({
                top: e,
                left: f
            }, a ? 0 : 200, function() {
                null == E && (E = new h.places.Autocomplete($("#search").get(0)), h.event.addListener(E, "place_changed", l));
                $("#search,#search-clear").removeClass("initial");
                D()
            });
            $("#bginfo-box").remove();
            $("#mainad").show();
            $("#hidemainad").click(function() {
                $("#mainad").fadeOut(function() {
                    $("#mainad").remove();
                    setTimeout(function() {
                            D()
                        },
                        250)
                });
                s("hidemainad");
                setCookie("hidead", "1", 30)
            });
            480 < $(window).width() && ($("#social").show(), $("#like-box").html(window.likeFrame), $("#tweet-box").html(window.tweetFrame), a = document.createElement("script"), a.type = "text/javascript", a.async = !0, a.src = "https://apis.google.com/js/plusone.js", e = document.getElementsByTagName("script")[0], e.parentNode.insertBefore(a, e))
        }
    }

    function l(a) {
        ka = new Date;
        k(9);
        var e = K();
        console.info('doing the l()');
        console.log(e);
        if (e)
            if (0 == info.inputs.length && !w && n(isTouch), e == L && !a) k(99);
            else {
                info.inputs.push(e);
                document.title =
                    e + " - Instant Street View";
                var f = info.searches.length,
                    i = info,
                    j = info.inputs,
                    g = [],
                    l = 0,
                    p = 1,
                    s;
                for (s in j) 1 == p && j[s].length < l ? (g.push(j[s - 1]), p = -1) : -1 == p && j[s].length > l && (p = 1), l = j[s].length;
                g.push(j[j.length - 1]);
                i.searches = g;
                info.searches.length > f && la("/search");
                L = e;
                console.info("calling Ja()");
                console.log(e);
                $.when(Ja(e)).done(function(f) {
                    if (!(f.status && "cancelled" == f.status))
                        if (f.geometry)
                            if (K())
                                if (e != L) q(0);
                                else {
                                    var i = f.geometry.location,
                                        j = f.geometry.viewport,
                                        g = f.formatted_address;
                                    M = i;
                                    y(g);
                                	console.info('Before Apply');
									console.log(f);
									console.log(t);

                                    $.when.apply($, $.map(t.svRadii, function(a) {
                                        var e = a[0],
                                            f = a[1],
                                            j = $.Deferred(),
                                            g = i.lat().toFixed(6) + i.lng().toFixed(6) + "#" + e;

                                        console.group('Requesting Panoramas');
                                        console.log(f ? h.StreetViewSource.OUTDOOR : google.maps.StreetViewSource.DEFAULT);
                                        console.log("location: " + i);
                                        console.log("radius: " + e);
                                        console.groupEnd();

                                        void 0 != r.sv[g] ? j.resolve(r.sv[g]) : U.getPanorama({
                                            location: i,
                                            radius: e,
                                            source: f ? h.StreetViewSource.OUTDOOR : google.maps.StreetViewSource.DEFAULT
                                        }, function(a, e) {
                                            info.counts.sv++;                                            
                                            
                                            console.group("Main computing");
                                            console.log("response:"+e);
                                            console.log(i);
                                            console.log(a);                                           
                                            console.log(h.geometry.spherical.computeDistanceBetween(i, a.location.latLng));
                                            console.log(r.sv);

                                            console.groupEnd();

                                            e == h.StreetViewStatus.OK ? (a.location.distance = h.geometry.spherical.computeDistanceBetween(i, a.location.latLng), a.outdoor = f, r.sv[g] = a, j.resolve(a)) : (e == h.StreetViewStatus.ZERO_RESULTS && (r.sv[g] = !1), j.resolve(!1))
                                        });
                                        return j.promise()
                                    })).then(Ka).done(function(e) {
										console.info("Is this the fkk computation??");
										console.log(e);
                                        K() ?
                                            M && h.geometry.spherical.computeDistanceBetween(i, M) > t.svRadii[t.svRadii.length - 1] ? q(0) : e ? f.svSuitable ? u && 1 > h.geometry.spherical.computeDistanceBetween(e.location.latLng, u) && 1 == m && !a ? k(99) : (u = e.location.latLng, ma(e, i), N(), z(i, j), $("#road-button").hide(), $("#globe-button").show(), k(3)) : (u = e.location.latLng, ma(e, i), O(), z(i, j), $("#globe-button").hide(), $("#road-button").removeClass("disabled").attr("original-title", $("#road-button").attr("data-title")).show(), k(2)) : (u = !1, O(), z(i, j), $("#globe-button").hide(),
                                                $("#road-button").addClass("disabled").attr("title", $("#road-button").attr("data-disabled-title")).show(), k(1)) : k(0)
                                    })
                                } else k(0);
                    else u = M = null, P = "", x = null, W.stop(), H.setInvisible(1), v.setInvisible(1), $("#no-location").show(), y("Location not found"), k(-1)
                })
            } else k(0)
    }

    function k(a) {
        99 == a ? k(na) : (9 != a && (na = a), 9 == a ? (q(1), $("#search").removeClass("svok").removeClass("mapsv").removeClass("nosv").removeClass("error")) : (q(0), 3 == a && ($("#search").removeClass("svok").removeClass("mapsv").removeClass("nosv").removeClass("error"),
            $("#search").addClass("svok")), 2 == a && ($("#search").removeClass("svok").removeClass("mapsv").removeClass("nosv").removeClass("error"), $("#search").addClass("mapsv")), 1 == a && ($("#search").removeClass("svok").removeClass("mapsv").removeClass("nosv").removeClass("error"), $("#search").addClass("nosv")), 0 == a && $("#search").removeClass("svok").removeClass("mapsv").removeClass("nosv").removeClass("error"), -1 == a && ($("#search").removeClass("svok").removeClass("mapsv").removeClass("nosv").removeClass("error"),
            $("#search").addClass("error"))))
    }

    function q(a) {
        a ? ($("#search-clear").hide(), $("#search-spinner").show()) : ($("#search-spinner").hide(), $("#search-clear").show())
    }

    function Ka() {
        for (var a = 1E3, e = !1, f = 0; f < arguments.length; f++) {
            var i = arguments[f];
            if (i && !isNaN(i.location.distance)) {
                var j = i.location.distance;
                i.priority = i.links.length && i.outdoor ? 1 : i.links.length ? 2 : i.outdoor ? 3 : 4;
                if (!e || e && (i.priority < e.priority || i.priority == e.priority && j < a)) e = i, a = j
            }
        }
        return e
    }

    function Ja(a) {
        var e = $.Deferred(),
            f;
        f = a.replace(/\s/g,
            "");

        
        console.group('Resolving search; returning second entry, e:');
        console.log(f);        
        console.log(e);
        console.groupEnd();

        if (/[-+]?\d{1,2}[.]\d+,[-+]?\d{1,3}[.]\d+/.test(f)) {
            var i = {
                geometry: {
                    location: !1
                },
                formatted_address: "",
                engine: "none",
                svSuitable: !0
            };
            f = a.split(",");            
            var j = new h.LatLng(f[0], f[1]);
            $.when(J(j)).done(function(a) {
                i.formatted_address = a && a.formatted_address ? a.formatted_address : "";
                i.geometry.location = j;
                
                e.resolve(i)
            })            
        } else $.when(La(a)).done(function(f) {
            K() ? f ? a != L ? e.resolve({
                    status: "cancelled"
                }) : $.when(Ma(f), oa(f)).then(pa).done(function(a) {
                	console.info('First case, not cancelled');
                	console.log(a);
                    e.resolve(a)
                }) : $.when(oa(a)).then(pa, !1).done(function(a) {
                	console.info("second case");
                	console.log(a);
                    e.resolve(a)
                }) :
                e.resolve({
                    status: "cancelled"
                })
        });
        return e.promise()
    }

    function La(a) {
        var e = $.Deferred();
        console.group('Place Predictions');
        console.log(a);
        
        void 0 != r.auto[a] ? e.resolve(r.auto[a]) : ea.getPlacePredictions({
            input: a
        }, function(f, i) {
            info.counts.ac++;
            console.log(i);
            console.log(f);
            if (i == h.places.PlacesServiceStatus.OK) {
                var j = f[0].description;
                r.auto[a] = j;
                e.resolve(j)
            } else i == h.places.PlacesServiceStatus.ZERO_RESULTS && (r.auto[a] = !1), e.resolve(!1)
        });
        console.groupEnd();
        return e.promise()
    }

    function Ma(a) {
        var e = $.Deferred();
        console.group('Text Search');
        console.info(a);
        
        void 0 != r.places[a] ? e.resolve(r.places[a]) : X.textSearch({
            query: a
        }, function(f, i) {
        	console.log(i);
            console.log(f);
            info.counts.pd++;
            if (i == h.places.PlacesServiceStatus.OK) {
                var j = f[0] || {};
                j.status = i;
                j.term = a;
                j.formatted_address = a;
                j.engine = "auto";
                r.places[a] = j;
                e.resolve(j)
            } else i == h.places.PlacesServiceStatus.ZERO_RESULTS && (r.places[a] = !1), e.resolve(!1)
        });
        console.groupEnd();
        return e.promise()
    }

    function oa(a) {
        var e = $.Deferred();
        console.group('Geocode 1');
        console.log(a);
        void 0 != r.geo[a] ? e.resolve(r.geo[a]) : T.geocode({
            address: a
        }, function(f, i) {
        	console.log(i);
            console.log(f);
            info.counts.go++;
            if (i == h.GeocoderStatus.OK) {
                var j = f[0] || {};
                j.status = i;
                j.term = a;
                j.engine = "geo";
                r.geo[a] = j;
                e.resolve(j)
            } else i == h.GeocoderStatus.ZERO_RESULTS &&
                (r.geo[a] = !1), i == h.GeocoderStatus.OVER_QUERY_LIMIT && s("geoOverQueryLimit"), e.resolve(!1)
        });
        console.groupEnd();
        return e.promise()
    }

    function J(a) {
        var e = $.Deferred(),
            f = a.lat().toFixed(6) + a.lng().toFixed(6);
        console.group('Geocode 2');
        console.log(a);
        console.log(f);
        void 0 != r.rgeo[f] ? e.resolve(r.rgeo[f]) : T.geocode({
            latLng: a
        }, function(a, j) {
        	console.log(a);
            console.log(j);
            info.counts.rgo++;
            if (j == h.GeocoderStatus.OK) {
                var g = a[0] || {};
                g.status = j;
                r.rgeo[f] = g;
                e.resolve(g)
            } else j == h.GeocoderStatus.ZERO_RESULTS && (r.rgeo[f] = !1), e.resolve(!1)
        });
        console.groupEnd();
        return e.promise()
    }

    function Na(a) {
        var e = $.Deferred();
        qa ? e.resolve(!1) : (85 <= a.lat() ?
            a = new h.LatLng(85, a.lng()) : -85 >= a.lat() && (a = new h.LatLng(-85, a.lng())), setTimeout(function() {
                e.resolve(!1)
            }, 1E3), ia.getMaxZoomAtLatLng(a, function(a) {
                a.status != google.maps.MaxZoomStatus.OK ? (a.status == google.maps.MaxZoomStatus.ERROR && (qa = !0), e.resolve(!1)) : e.resolve(a.zoom)
            }));
        return e.promise()
    }

    function pa(a, e) {
        if ((!a || !a.geometry) && (!e || !e.geometry)) return !1;
        var f = a ? ra(a.types, t.svTypes) : 999,
            i = e ? ra(e.types, t.svTypes) : 999;
        a && sa("primary types: " + a.types + ", index: " + f);
        e && sa("secondary types: " + e.types +
            ", index: " + i);
        var j;
        a && f < i || !e ? (j = a, j.typeIndex = f) : e && i < f || !a ? (j = e, j.typeIndex = i) : (j = a, j.typeIndex = f);
        j.svSuitable = j.typeIndex <= t.svTypes.length ? !0 : !1;
        return j
    }

    function ra(a, e) {
        if (a && a.length) {
            var f = 999,
                i;
            for (i in a) {
                var j = $.inArray(a[i], e); - 1 !== j && j < f && (f = j)
            }
            return f
        }
        return e.length
    }

    function ma(a, e) {
        2 == m ? Q() : panorama.setVisible(!0);
        var f = {
            heading: h.geometry.spherical.computeHeading(a.location.latLng, e),
            zoom: 1,
            pitch: 5
        };

        console.group('Setting up panorama');
        console.log(a.location.latLng);
        console.log(e);
        console.log(f);
        console.groupEnd();

        ta.setPosition(e);
        panorama.noRecenter = !0;
        panorama.setOptions({
            pano: a.location.pano,
            pov: f
        });
        ua(a.location.latLng, a.location.pano, f)
    }

    function z(a, e, f) {
        fa.setPosition(a);
        var i = g.getMapTypeId() == h.MapTypeId.ROADMAP;
        f ? (v.stop().setVisible(), g.setCenter(a), g.setZoom(f)) : $.when(Na(a)).then(function(f) {
            v.setInvisible();
            e ? (g.fitBounds(e), f = f ? i ? g.getZoom() : Math.min(g.getZoom(), f) : g.getZoom()) : f = f ? i ? t.defaultMapZoom : Math.min(f, t.defaultMapZoom) : t.defaultMapZoom;
            1 == m && (f = Math.min(f, t.maxSmallMapZoom));
            g.setCenter(a);
            g.getZoom() != f && g.setZoom(f);
            v.stop().setVisible()
        })
    }

    function O() {
        m = 2;
        g.prevCenter =
            g.getCenter();
        g.prevBounds = g.getBounds();
        v.removeClass("small").addClass("full");
        h.event.trigger(g, "resize");
        g.getMapTypeId();
        g.setOptions({
            mapTypeControlOptions: {
                position: h.ControlPosition.TOP_LEFT,
                style: h.MapTypeControlStyle.HORIZONTAL_BAR
            },
            mapTypeControl: !0,
            panControl: !0
        });
        panorama.setPov(panorama.getPov());
        v.stop().setVisible();
        H.setInvisible();
        $("#maparrow").hide();
        $("#maptypecss").remove()
    }

    function N() {
        m = 1;
        g.prevCenter = g.getCenter();
        g.prevBounds = g.getBounds();
        v.removeClass("full").addClass("small");
        h.event.trigger(g, "resize");
        g.setOptions({
            mapTypeControlOptions: {
                position: google.maps.ControlPosition.TOP_LEFT,
                style: h.MapTypeControlStyle.HORIZONTAL_BAR
            },
            mapTypeControl: !0,
            panControl: !1
        });
        panorama.setPov(panorama.getPov());
        v.stop().setVisible();
        H.stop().setVisible();
        $("#maparrow").show();
        va("maptypecss", ".gm-style-mtc{position:static !important;")
    }

    function ja() {
        panorama && $("#pano").empty();
        panorama = new h.StreetViewPanorama(document.getElementById("pano"));
        try {
            g.setStreetView(panorama)
        } catch (a) {}
        ta =
            new h.Marker({
                map: panorama
            })
            console.group("Pano Details -- after applying marker");
            console.log(panorama);
            console.groupEnd();
    }

    function Ha() {
        I();
        var a = panorama.getPosition();
        a && (1 == m && F(), setTimeout(function() {
            g.getCenter()
        }, 1E3), (!u || 10 < h.geometry.spherical.computeDistanceBetween(u, a)) && $.when(J(a)).done(function(a) {
            var f = "";
            try {
                f = panorama.getLocation().description
            } catch (i) {
                f = ""
            }
            y(a && a.formatted_address ? a.formatted_address : f)
        }), !B && (!panorama.noRecenter && !g.getBounds().contains(u)) && g.panTo(u), panorama.noRecenter = !1, u = a)
    }

    function Ia() {
        B && 2 == m && panorama.getVisible() ? (Q(), $("#road-button").removeClass("disabled").attr("title",
            $("#road-button").attr("data-title")).trigger("click")) : panorama.getVisible() || (B = !1, panorama.setVisible(!0))
    }

    function y(a) {
        R = a = $.trim(a);
        $("#address").show();
        $("#address > span").text(a).attr("title", a);
        0 < a.length && (document.title = a + " | Instant Street View", window.postAddress && Y() && (window.postAddress = 0, setTimeout(wa, 1500)))
    }

    function K() {
        var a = P || $.trim($("#search").val());
        return 1 < a.length ? a : !1
    }


    function Z(a) {
    	console.group("before computing panorama arguments and floor id for ");
    	console.log(a, panorama);
        var a = a || panorama,
            e = a.getPosition(),
            f = a.getPano(),
            a = a.getPov();
        a.heading %= 360;
        console.log(a);
        console.groupEnd();
        return panorama.S &&
            panorama.S.view && panorama.S.view.floorId && "0" != panorama.S.view.floorId ? xa(e, a, f) : e && a ? "@" + p(e.lat(), 6) + "," + p(e.lng(), 6) + "," + p(a.heading, 2) + "h," + p(a.pitch, 2) + "p," + p(a.zoom, 2) + "z" : ""
    }

    //computes the floor id
    function xa(a, e, f) {
        return f && a && e ? "@" + p(a.lat(), 6) + "," + p(a.lng(), 6) + "," + p(e.heading, 2) + "h," + p(e.pitch, 2) + "p," + p(e.zoom, 2) + "z," + f : ""
    }

    function aa(a, e, f) {
        var a = a || g.getCenter(),
            e = e || g.getZoom(),
            f = f || g.getMapTypeId() || 1,
            i = [];
        i.hybrid = 0;
        i.roadmap = 1;
        i.satellite = 2;
        i.terrain = 3;
        return a ? "@" + p(a.lat(), 6) + "," + p(a.lng(), 6) + "," + e + "z," +
            i[f] + "t" : ""
    }

    function S(a, e) {
        return Math.round(p(a, e).toFixed(e) * Math.pow(10, e)).baseEncode(35)
    }

    function G() {
        return !A() ? "" : 1 == m ? ya + "/" + Z() : 2 == m ? ya + "/" + aa() : ""
    }

    function Y() {
        return !A() ? "" : 1 == m ? Z() : 2 == m ? aa() : ""
    }

    //creates the rquest to street view !!high interest in this, although params seem precomputed
    function ba() {
        if (!A()) return !1;
        var a;
        if (1 == m) {
            a = panorama.getPov();
            var e = 2 * Math.max(10, 90 / Math.pow(2, a.zoom));
            a = "http://maps.googleapis.com/maps/api/streetview?size=640x640&pano=" + panorama.getPano() + "&heading=" + a.heading + "&fov=" + e + "&pitch=" + a.pitch + "&sensor=false"
        } else a = 2 == m ? "http://maps.googleapis.com/maps/api/staticmap?center=" +
            ca() + "&zoom=" + g.getZoom() + "&maptype=" + g.getMapTypeId() + "&size=640x640&sensor=false" : !1;
        return a
    }

    function ca() {
        return !A() ? "" : 1 == m ? p(panorama.getPosition().lat(), 6) + "," + p(panorama.getPosition().lng(), 6) : 2 == m ? p(g.getCenter().lat(), 6) + "," + p(g.getCenter().lng(), 6) : ""
    }

    function I() {
        if (A()) {
            $("#link").val(G());
            var a = ba();
            a && ($("#map-img").remove(), $("#img-link").val(a), $("#latlng-link").val(ca()));
            a = Y();
            "/" == location.pathname ? pushState({}, "/" + a) : location.pathname != a && replaceState({}, "/" + a)
        }
    }

    function A() {
        return 1 ==
            m ? panorama && panorama.getPosition() && panorama.getPov() : 2 == m ? g && g.getCenter() && g.getZoom() && g.getMapTypeId() : !1
    }

    function Oa() {
        var a = this;
        this.init = function() {
            panorama.setOptions({
                imageDateControl: !1,
                panControl: !1,
                addressControl: !1,
                zoomControl: !1,
                mode: "html4"
            });
            this.panoVisEvent = !1;
            this.bgPointer = 0;
            this.bgData = window.bgData;
            $("#pano.initial").on("click", function() {
                $("#pano-box.initial").animate({
                    opacity: "0.85"
                })
            });
            $("#search").on("focus", function() {
                $("#pano-box.initial").animate({
                    opacity: "0.6"
                })
            });
            h.event.addListenerOnce(panorama,
                "position_changed",
                function() {
                    setTimeout(function() {
                        $("#pano,#bginfo-box").setVisible(!0, 500);
                        panorama.setVisible(!0)
                    }, 250)
                });
            this.setPano(this.bgData[0]);
            setTimeout(function() {
                F()
            }, 250);
            this.listeners()
        };
        this.listeners = function() {
            $("#bgback").on("click", function() {
                a.prev();
                s("bgback")
            });
            $("#bgforward").on("click", function() {
                a.next();
                s("bgforward")
            });
            $("#bgfull").on("click", function() {
                s("bgfull");
                var e = a.getBgLink();
                e && (window.location = e)
            });
            isTouch || ($("#bgforward,#bgfull").tipsy({
                trigger: "hover",
                opacity: 1,
                offset: 5,
                delayIn: 250,
                gravity: "n"
            }), $("#bgback").tipsy({
                trigger: "hover",
                opacity: 1,
                offset: 5,
                delayIn: 250,
                gravity: "nw"
            }))
        };
        this.setPano = function(a) {
            a || (a = ["63.42826,10.40137,-697.4,-22.1,-1", "bZ5cgRcFQn7epao_wynjTQ", "Trondheim, Norway"]);
            var f = za(a[0]);
            f && (f.pov = {
                heading: f.pov.heading,
                pitch: -1 * f.pov.pitch,
                zoom: f.pov.zoom + 1
            }, f.fov = 90 / Math.max(1, f.pov.zoom), panorama.setOptions({
                pano: a[1],
                pov: f.pov
            }), panorama.setOptions({
                position: f.latLng,
                pov: f.pov
            }), $("#address > span").text(a[2]))
        };
        this.next =
            function() {
                this.bgPointer = this.bgPointer == this.bgData.length - 1 ? 0 : this.bgPointer + 1;
                this.setPano(this.bgData[this.bgPointer]);
                setTimeout(function() {
                    F()
                }, 250)
            };
        this.prev = function() {
            this.bgPointer = 0 == this.bgPointer ? this.bgData.length - 1 : this.bgPointer - 1;
            this.setPano(this.bgData[this.bgPointer]);
            setTimeout(function() {
                F()
            }, 250)
        };
        this.getBgLink = function() {
            return panorama.getPosition() ? "/" + Z(panorama) : !1
        }
    }

    //this might be just the initial panorama
    function Ga() {
        var a = this;
        this.init = function() {
            this._populatePointCacheTimeout && clearTimeout(this._populatePointCacheTimeout);
            this._populateSvCacheTimeout && clearTimeout(this._populateSvCacheTimeout);
            this.svCacheMaxSize = 6;
            this.svCacheMinSize = 3;
            this.svCache = [];
            this.pointCacheMaxSize = 50;
            this.pointCacheMinSize = 6;
            this.pointCache = [];
            this.radius = 15 > g.getZoom() ? 200 : 15 == g.getZoom() ? 100 : 50;
            this.maxActiveSvSearches = 3;
            this.svSearchSuccesses = this.svSearchAttempts = this.fetchPointsActive = this.activeSvSearches = 0;
            this.maxFailedSvSearches = 50;
            this.currentFailedSvSearches = 0;
            this.nullSearch = !0
        };
        this.getRandomPano = function() {
            a.log("getRandomPano");
            this.nullSearch = !1;
            var e = $.Deferred();
            0 < this.svCache.length ? (a.log("returning sv from cache, left: " + (this.svCache.length - 1)), this.svCache.length < this.svCacheMinSize && this._populateSvCache(), e.resolve(this.svCache.shift())) : (a.log("sv cache empty, filling to one"), $.when(this._populateSvCache(1)).then(function(f) {
                f && 0 < a.svCache.length ? (a.log("single sv requested and found, returning that"), a._populateSvCache(), e.resolve(a.svCache.shift())) : (a.log("null resolve from _populateSvCache"), e.resolve(!1))
            }));
            return e.promise()
        };
        this._populateSvCache = function(e, f) {
            a.log("_populateSvCache");
            f = f || $.Deferred();
            e = e || this.svCacheMaxSize;
            this.nullSearch ? (a.log("null @ _populateSvCache"), f.resolve(null)) : this.svCache.length >= e ? (a.log("sv cache ok target/size " + e + "/" + a.svCache.length + ", attempts / successes " + a.svSearchAttempts + "/" + a.svSearchSuccesses), f.resolve(!0)) : (this.activeSvSearches < this.maxActiveSvSearches && (this.activeSvSearches++, $.when(a._getRandomPoint()).then(function(e) {
                return a._fetchSvFromPoint(e)
            }).then(function(e) {
                a.activeSvSearches--;
                e && e.location ? (a.svCache.push(e.location), a.log("SV ok, adding to cache, size: " + a.svCache.length)) : a.log("No SV / no point found")
            })), this._populateSvCacheTimeout = setTimeout(function() {
                a._populateSvCache(e, f)
            }, 100));
            return f.promise()
        };
        this._getRandomPoint = function(e) {
            a.log("_getRandomPoint");
            e = e || $.Deferred();
            if (this.nullSearch) a.log("null @ _getRandomPoint"), e.resolve(null);
            else if (0 < this.pointCache.length) {
                a.log("getting point from cache");
                this.pointCache.length < this.pointCacheMinSize && this._populatePointCache();
                var f = this.pointCache.shift(),
                    f = f ? new h.LatLng(f[0], f[1]) : !1;
                g.getBounds().contains(f) ? e.resolve(f) : a._getRandomPoint(e)
            } else a.log("point cache empty, trying to repopulate..."), $.when(this._populatePointCache()).then(function(f) {
                f ? a._getRandomPoint(e) : (a.log("failed to populate point cache - probably no sv in area"), e.resolve(!1))
            });
            return e.promise()
        };
        this._populatePointCache = function(e) {
            a.log((e ? "dfd " : "") + "_populatePointCache");
            e = e || $.Deferred();
            this.nullSearch ? (a.log("null @ _populatePointCache"),
                e.resolve(null)) : this.pointCache.length >= this.pointCacheMaxSize ? (a.log("point cache ok size/maxSize " + this.pointCache.length + "/" + this.pointCacheMaxSize), e.resolve(!0)) : (this.fetchPointsActive || $.when(this._fetchRandomPoints()).then(function(f) {
                f ? (a.log("received " + f.p.length + " points"), $.each(f.p, function() {
                    a.pointCache.push(this)
                }), e.resolve(!0)) : e.resolve(!1)
            }), this._populatePointCacheTimeout = setTimeout(function() {
                a._populatePointCache(e)
            }, 100));
            return e.promise()
        };
        this._fetchRandomPoints = function() {
            a.log("_fetchRandomPoints");
            var e = $.Deferred();
            if (this.nullSearch) a.log("null @ _fetchRandomPoints"), e.resolve(null);
            else {
                a.log("fetching points from server");
                this.fetchPointsActive = 1;
                var f;
                (f = (f = g && g.getBounds()) ? S(f.getSouthWest().lat() + 90, 5) + "z" + S(f.getNorthEast().lat() + 90, 5) + "z" + S(f.getSouthWest().lng() + 180, 5) + "z" + S(f.getNorthEast().lng() + 180, 5) : !1) ? $.ajax({
                    url: "/_r/" + f,
                    type: "get",
                    complete: function(f) {
                        a.fetchPointsActive = 0;
                        if (f && f.responseText && 400 > f.status) {
                            a.log("server points response ok");
                            try {
                                var g = $.parseJSON(f.responseText.replace(/while\(1\);/g,
                                    ""))
                            } catch (h) {
                                a.log("bad JSON response")
                            }
                            g && !g.error && g.p && g.p.length ? e.resolve(g) : (a.log("server points response bad"), a.nullSearch = !0, e.resolve(!1))
                        } else a.log("server points status " + f.status), a.nullSearch = !0, e.resolve(!1)
                    }
                }): setTimeout(function() {
                    e.resolve(!1)
                }, 100)
            }
            return e.promise()
        };
        this._fetchSvFromPoint = function(e) {
            var f = $.Deferred();
            a.log("_fetchSvFromPoint");
            this.nullSearch ? (a.log("null @ _fetchRandomPoints"), f.resolve(null)) : 0 == this.svCache.length && this.currentFailedSvSearches > this.maxFailedSvSearches ?
                (a.log("too many failed searches - probably no sv in this region"), this.nullSearch = !0, f.resolve(null)) : e ? (this.svSearchAttempts++, U.getPanoramaByLocation(e, this.radius, function(e, g) {
                    a.log("sv from point status: " + g);
                    g == h.StreetViewStatus.OK ? (a.svSearchSuccesses++, a.currentFailedSvSearches = 0, f.resolve(e)) : (a.currentFailedSvSearches++, a.log("####### " + a.currentFailedSvSearches + " / " + a.svCache.length + " / " + a.maxFailedSvSearches), f.resolve(!1))
                })) : (a.log("no point supplied"), this.nullSearch = !0, f.resolve(null));
            return f.promise()
        };
        this.log = function() {}
    }

    //this might be the controller of the search box; handles the panorama a lot, needs inspection ??
    function Pa() {
        if (window.searchTerm) return n(1), $("#search").val(window.searchTerm).trigger("input"), !0;
        if (window.urlString && window.urlType) {
            n(1);
            if ("sv_pos" == window.urlType) {
                var a = za(window.urlString);
                N();
                z(a.latLng);
                panorama.noRecenter = !0;
                panorama.setOptions({
                    position: a.latLng,
                    pov: a.pov
                })
            } else if ("sv_id" == window.urlType) {
                var e = {},
                    f = window.urlString.split(","),
                    i = parseFloat(f[0]),
                    j = parseFloat(f[1]),
                    k = parseFloat(f[2]),
                    l = parseFloat(f[3]),
                    m = parseFloat(f[4]);
                !isNaN(i) &&
                    !isNaN(j) && !isNaN(k) && !isNaN(l) && !isNaN(m) ? (e.latLng = new h.LatLng(i, j), e.pov = {
                        heading: k,
                        pitch: l,
                        zoom: m
                    }, e.panoid = f[5], a = e) : a = !1;
                N();
                z(a.latLng);
                panorama.noRecenter = !0;
                panorama.setOptions({
                    pano: a.panoid,
                    pov: a.pov
                });
                var p = h.event.addListener(panorama, "visible_changed", function() {
                    panorama.getVisible() || (panorama.noRecenter = !0, panorama.setOptions({
                        position: a.latLng,
                        pov: a.pov
                    }), panorama.setVisible(!0), h.event.removeListener(p))
                });
                h.event.addListener(panorama, "position_changed", function() {
                    h.event.removeListener(p)
                })
            } else "map" ==
                window.urlType && (e = {}, f = window.urlString.split(","), i = parseFloat(f[0]), j = parseFloat(f[1]), k = parseFloat(f[2]), !isNaN(i) && !isNaN(j) && !isNaN(k) ? (e.latLng = new h.LatLng(i, j), e.zoom = k, e.type = f[3]) : e = !1, O(), g.setMapTypeId(e.type), z(e.latLng, null, e.zoom), $("#globe-button").hide(), $("#road-button").show());
            return !0
        }
        return !1
    }

    //this is one of the missing pieces in my logic, I think 
    function za(a) {
        var e = {},
            f = a.split(","),
            a = parseFloat(f[0]),
            g = parseFloat(f[1]),
            j = parseFloat(f[2]),
            k = parseFloat(f[3]),
            f = parseFloat(f[4]);

        console.group('ZA Transforming arguments into needed params - pov, heading, zoom, pitch');        
        console.log(a);
        console.log(g);
        console.log(j,k,f);
        console.groupEnd();
        return !isNaN(a) && !isNaN(g) && !isNaN(j) && !isNaN(k) &&
            !isNaN(f) ? (e.latLng = new h.LatLng(a, g), e.pov = {
                heading: j,
                pitch: k,
                zoom: f
            }, e) : !1
    }

    //sets a marker at the indicated location -- might be usefull #todo
    function ua(a, e, f) {
        a = new h.Marker({
            map: g,
            position: a,
            icon: Qa
        });
        R && a.setTitle(R);
        a.pov = f;
        a.pano = e;
        a.clickEvent = h.event.addListener(a, "click", function() {
            2 == m ? (Q(), $("#road-button").removeClass("disabled").attr("title", $("#road-button").attr("data-title")).trigger("click")) : panorama.setVisible(!0);
            panorama.noRecenter = !0;
            panorama.setOptions({
                pano: this.pano,
                pov: this.pov
            })
        })
    }

    function Q() {
        panorama.setVisible(!1);
        clearTimeout(Aa);
        Aa = setTimeout(function() {
            panorama.setVisible(!0)
        }, 400)
    }

	//computes the zoom and pov based on the response object -- kind of not really know how is useful, but might be
    function F(a) {
        a = a || panorama;
        clearTimeout(Ba);
        Ba = setTimeout(function() {
            a && (a.getPov() && 0 <= a.getPov().zoom) && a.setZoom(a.getPov().zoom + Math.random() / 1E6)
        }, 20)
    }

    function Ca() {
        $.when(C.getRandomPano()).then(function(a) {
            Da = !1;
            V(0);
            // console.info('actually trying to get a random pano!!');
            if (a) {
                u = a.latLng;
                2 == m ? (Q(), $("#road-button").removeClass("disabled").attr("title", $("#road-button").attr("data-title")).trigger("click")) : panorama.setVisible(!0);
                var e = {
                        heading: 360 * Math.random(),
                        pitch: 5,
                        zoom: 1
                    },
                    f = panorama.getPov();
                f && (f.heading += 360, e.heading = (f.heading + 90 + Math.ceil(180 * Math.random())) % 720 - 360);
                panorama.noRecenter = !0;
                panorama.setOptions({
                    pano: a.pano,
                    pov: e
                });
                F();
                a.description ? y(a.description) : $.when(J(a.latLng)).done(function(a) {
                    y(a && a.formatted_address ? a.formatted_address : "")
                });
                ua(a.latLng, a.pano, e)
            } else alert("No Street Views found within current map. Try zooming out.")
        })
    }

    function wa() {
        panorama.getPano()
    }

    //usefull if searching for places; not for the moment
    function Ea() {
        if (xPlaces.length) {
            var a = xPlaces.shift();
            if (!a.sv_name || isNaN(a.sv_lat) || isNaN(a.sv_lng) ||
                isNaN(a.center_lat) || isNaN(a.center_lng)) clearTimeout(window.xGeoTimeout);
            else {
                var e = new h.LatLng(a.sv_lat, a.sv_lng);
                a.sv_name.split(" ").shift();
                X.textSearch({
                    query: a.sv_name,
                    location: e,
                    radius: 100
                }, function(e) {
                    e.length && (e[0].geometry.location.lat = e[0].geometry.location.lat(), e[0].geometry.location.lng = e[0].geometry.location.lng());
                    e = JSON.stringify(e[0]) || "{}";
                    $.post("/_p/", {
                        id: a.id,
                        lat: a.center_lat,
                        lng: a.center_lng,
                        data: e
                    }, function() {
                        window.xGeoTimeout = setTimeout(function() {
                            Ea()
                        }, 100)
                    })
                })
            }
        } else window.xGeoTimeout &&
            clearTimeout(window.xGeoTimeout)
    }

    function sa(a) {
        "undefined" != typeof console && "undefined" != typeof dm && console.log(a + "  [" + ((new Date - ka) / 1E3).toFixed(2) + "]")
    }

    function p(a, e) {
        return Math.round(a * Math.pow(10, e)) / Math.pow(10, e)
    }

    function s(a, e, f) {
        _gaq && a && _gaq.push(["_trackEvent", "main", a, e, f])
    }

    function la(a) {
        _gaq && _gaq.push(["_trackPageview", a])
    }

    function D() {
        var a = w ? parseInt($("#mainad").css("height")) : parseInt($("#firstad").css("height"));
        isNaN(a) && (a = 0);
        a = $(window).height() - a;
        480 >= $(window).width() ?
            ($("#share-img-box").attr("class", "col-md-5"), $("#share-links-box").attr("class", "col-md-7")) : ($("#share-img-box").attr("class", "col-xs-5"), $("#share-links-box").attr("class", "col-xs-7"));
        768 >= $(window).width() && 355 <= $(window).height() ? $("#mainad iframe").length || $("#firstad").hasClass("small") && $("#firstad iframe").length ? $("#container").css("height", a) : $("#container").css("height", "100%") : ($("#container").css("height", "100%"), $("#mainad").removeClass("bottom"));
        var a = Math.min(350, $(window).width() -
                $("#search-box").offset().left - $("#actions-box").outerWidth() - 19),
            e = $("#search-box").outerWidth() - $("#menu-links").outerWidth() + $("#search-box").offset().left - 28;
        $("#address").css("width", e);
        w ? ($("#search").css("width", a), a = $("#search-box").outerWidth() - 6, va("paccss", ".pac-container{width:" + a + "px !important")) : $("#address").width($(window).width() - $("#menu-links").outerWidth() - 28)
    }

    function V(a) {
        0 == a ? $("#random-button").removeClass("disabled").attr("title", $("#random-button").data("title")).find("i").removeClass("fa-clock-o").addClass("fa-random") :
            $("#random-button").addClass("disabled").attr("title", $(this).attr("data-busy-title")).find("i").removeClass("fa-random").addClass("fa-clock-o")
    }

    function va(a, e) {
        $(a).remove();
        $('<style id="' + a + '">' + e + "</style>").appendTo("head")
    }

    function Ra() {
        s("fbook");
        window.open("https://www.facebook.com/sharer.php?u=" + encodeURIComponent(G()), "Facebook", "toolbar=0,status=0,width=650,height=350,scrollbars=0,menubar=0,top=" + (screen.height - 350) / 2 + ",left=" + (screen.width - 650) / 2)
    }

    function Sa() {
        s("tweet");
        window.open("https://twitter.com/share?url=" +
            encodeURIComponent(G()) + "&via=instantstreetvw&hashtags=instantstreetview", "Twitter", "toolbar=0,status=0,width=480,height=250,scrollbars=0,menubar=0,top=" + (screen.height - 350) / 2 + ",left=" + (screen.width - 480) / 2)
    }

    function Ta() {
        s("gplus");
        window.open("https://plus.google.com/share?url=" + encodeURIComponent(G()), "Google Plus", "toolbar=0,status=0,width=600,height=600,scrollbars=0,menubar=0,top=" + (screen.height - 600) / 2 + ",left=" + (screen.width - 600) / 2)
    }

    function Ua() {
        s("pinterest");
        window.open("http://pinterest.com/pin/create/button/?url=" +
            encodeURIComponent(G()) + "&media=" + encodeURIComponent(ba()) + "&description=" + document.title, "Pinterest", "toolbar=0,status=0,width=650,height=350,scrollbars=0,menubar=0,top=" + (screen.height - 350) / 2 + ",left=" + (screen.width - 650) / 2)
    }
    window.historyChanged = !1;
    var ya = window.location.protocol + "//www.instantstreetview.com",
        h = google.maps,
        Qa = "/img/marker.png",
        ka, g = "";
    window.panorama = "";
    var v, H, fa, ta, m = 0,
        na = 0,
        T = null,
        U = null,
        ha = null,
        ga = !1,
        E = null,
        ea = null,
        X = null,
        ia = null,
        qa = !1,
        Aa, Ba, B = !1,
        L = "",
        M = null,
        u = null,
        R = "",
        P = "",
        x = null,
        Da = !1,
        da = !1,
        w = !1,
        Va = isTouch ? 1E3 : 200,
        Fa = !0,
        t = {
            defaultMapZoom: 15,
            maxSmallMapZoom: 17,
            svTypes: "accounting airport amusement_park aquarium art_gallery atm bakery bank bar beauty_salon bicycle_store book_store bowling_alley bus_station cafe campground car_dealer car_rental car_repair car_wash casino cemetery church city_hall clothing_store convenience_store courthouse dentist department_store doctor electrician electronics_store embassy establishment finance fire_station florist food funeral_home furniture_store gas_station general_contractor grocery_or_supermarket gym hair_care hardware_store health hindu_temple home_goods_store hospital insurance_agency jewelry_store laundry lawyer library liquor_store local_government_office locksmith lodging meal_delivery meal_takeaway mosque movie_rental movie_theater moving_company museum night_club painter park parking pet_store pharmacy physiotherapist place_of_worship plumber police post_office real_estate_agency restaurant roofing_contractor rv_park school shoe_store shopping_mall spa stadium storage store subway_station synagogue taxi_stand train_station travel_agency university veterinary_care zoo premise subpremise route post_box room floor natural_feature neighborhood postal_code street_address street_number transit_station point_of_interest intersection".split(" "),
            svRadii: [
                [50, !1],
                [200, !1],
                [250, !0]
            ]
        },
        C, r = {
            auto: {},
            places: {},
            geo: {},
            rgeo: {},
            sv: {}
        };
    window.info = {
        inputs: [],
        searches: [],
        counts: {
            mc: 0,
            ac: 0,
            pd: 0,
            go: 0,
            rgo: 0,
            sv: 0
        }
    };
    var W = new Spinner({
        lines: 12,
        length: 8,
        width: 4,
        radius: 10,
        color: "#fff",
        speed: 3,
        trail: 47,
        shadow: !0,
        hwaccel: !1,
        className: "spinner",
        zIndex: 100,
        top: "auto",
        left: "auto"
    });
    $(document).ready(function() {
        FastClick.attach(document.body);
        ja();
        if (isTouch) $("#search").one("click", function() {
            var a = window.innerHeight;
            setTimeout(function() {
                window.innerHeight < a &&
                    (isSoftKeyboard = !0, E = new h.places.Autocomplete($("#search").get(0)), h.event.addListener(E, "place_changed", l))
            }, 2E3)
        });
        $("#search").on("keyup input", $.debounce(Va, function() {
            isSoftKeyboard || (P = "", l(!1))
        }));
        $("#form").on("submit", function() {
            l(!0);
            isSoftKeyboard && $("#search").blur();
            return !1
        });
        $("#search-clear").on("click", function() {
            k(0);
            $("#search").blur().val("").focus();
            $("#form").get(0).reset()
        });
        $("#globe-button").on("click", function() {
            !$(this).hasClass("disabled") && 1 == m && (O(), g.setZoom(g.getZoom() +
                2), g.panTo(g.getCenter()), g.setCenter(x), $(this).hide(), $("#road-button").removeClass("disabled").attr("title", $("#road-button").attr("data-title")).show())
        });
        $("#road-button").on("click", function() {
            if (!$(this).hasClass("disabled") && 2 == m) {
                var a = ca();
                !panorama.getPosition() && 0 == info.searches.length && a ? (P = a, l()) : (N(), g.setZoom(g.getZoom() - 2), g.panTo(g.getCenter()), g.setCenter(x), $(this).hide(), $("#globe-button").show())
            }
        });
        $("#link,#img-link,#latlng-link").on("click", function() {
            isTouch ? $(this).get(0).setSelectionRange(0,
                $(this).val().length) : $(this).select();
            s($(this).attr("id"))
        });
        $("#random-button").on("click", function() {
            if (!$(this).hasClass("disabled")) {
                if (Da) return !1;
                V(1);
                1 == m && g.getZoom() > t.maxSmallMapZoom ? (g.setZoom(t.maxSmallMapZoom), h.event.addListenerOnce(g, "bounds_changed", function() {
                    Ca()
                })) : Ca();
                la("/random")
            }
        });
        $("#maparrow").toggler(function() {
            v.addClass("noshow");
            $(this).attr("class", "up")
        }, function() {
            v.removeClass("noshow");
            h.event.trigger(g, "resize");
            $(this).attr("class", "down")
        });
        $("#about-link").on("click",
            function() {
                $("#about-box").modal()
            });
        $("#share-button").on("click", function() {
            s("share-button");
            $("#share-img").attr("src", ba());
            $("#share-box").modal();
            0 < R.length && Y() && setTimeout(wa, 250)
        });
        $("#map").on("click", ".gm-photos", function() {
            2 == m && setTimeout(function() {
                $("#road-button").trigger("click")
            }, 500)
        });
        isTouch || ($("#globe-button,#road-button,#random-button,#share-button").each(function() {
            $(this).attr("data-title", $(this).attr("title"))
        }).tipsy({
            trigger: "hover",
            opacity: 1,
            offset: 6,
            delayIn: 500,
            gravity: "n"
        }).on("click",
            function() {
                $(this).tipsy("hide")
            }), $("#share-img").tipsy({
            trigger: "hover",
            opacity: 1,
            offset: 3,
            delayIn: 250,
            gravity: "w"
        }), $("#link,#img-link").tipsy({
            trigger: "hover",
            opacity: 1,
            offset: 2,
            delayIn: 250,
            gravity: "n"
        }));
        $(window).on("popstate", function() {
            historyChanged && (0 < info.counts.mc && "/" == window.location.pathname) && window.location.reload();
            !historyChanged && (1 >= info.counts.mc && "/" != window.location.pathname) && window.location.reload()
        });
        $(document).on("keydown", function(a) {
            if (!$("#search").is(":focus") && w &&
                82 != a.which)
                if (77 == a.which) 1 == m ? $("#globe-button").trigger("click") : 2 == m && $("#road-button").trigger("click");
                else if (68 != a.which && 83 != a.which && 192 == a.which && a.ctrlKey && A()) {
                var e, f;
                1 == m ? f = xa(panorama.getPosition(), panorama.getPov(), panorama.getPano()) : 2 == m && (f = aa());
                f && (e = "/_d/" + f, $("#download-button").addClass("disabled").attr("title", "Generating image. Please wait...").find("i").removeClass("icon-download-alt").addClass("fa-clock-o"), setTimeout(function() {
                    window.location.href = e
                }, 50), setTimeout(function() {
                    $("#download-button").removeClass("disabled").attr("title",
                        $("#download-button").data("title")).find("i").removeClass("fa-clock-o").addClass("icon-download-alt")
                }, 1E4))
            }
        });
        $(".suggestion").click(function(a) {
            a.preventDefault();
            da || (da = !0, $("#form > label > span").remove(), $("#search").jTypeWriter({
                text: $(this).text(),
                fixedInterval: 150,
                randomInterval: 200,
                onLetter: function() {
                    $("#search").trigger("input")
                },
                onComplete: function() {
                    da = !1;
                    isSoftKeyboard && $("#form").submit()
                }
            }));
            s("hintClick", $(this).text());
            return !1
        });
        $(window).on("resize", $.debounce(10, function() {
            g &&
                (h.event.trigger(g, "resize"), g.setCenter(x));
            D()
        }));
        $("#map-box,#pano-box,#pano-box").on("click", function() {
            $(".pac-container").hide();
            $("#search").blur()
        });
        $("#share-fb").click(Ra);
        $("#share-twitter").click(Sa);
        $("#share-gplus").click(Ta);
        $("#share-pinterest").click(Ua);
        Pa() || (new Oa).init();
        isTouch ? $(".btn").addClass("touch") : $("#search").focus();
        $("#search").on("click", function() {
            w || ($("#hint").hide(), isTouch && 800 > $(window).height() && ($("#search-box,#search").removeClass("initial"), $("#headline").hide(),
                $("#bginfo-box").hide()))
        }).on("blur", function() {
            setTimeout(function() {
                w || ($("#search-box,#search").addClass("initial"), $("#hint").show(), $("#headline").show(), $("#bginfo-box").show())
            }, 500)
        });
        w || (setTimeout("$('#hint').setVisible(true,1000);", 2E3), setTimeout("$('#promo').setVisible(true,1000);", 3E3));
        window.xPlaces && (window.xPlaces = $.parseJSON(xPlaces), Ea());
        D()
    });
    $.fn.setVisible = function(a, e) {
        if (0 != $(this).length) {
            e = e || 200;
            try {
                var f = parseInt($(this).css("counter-reset").substring(2)) / 10 || 1
            } catch (g) {
                f =
                    1
            }
            a ? $(this).css({
                visibility: "visible"
            }).stop().animate({
                opacity: f
            }, e) : $(this).css({
                visibility: "visible",
                opacity: f
            });
            return $(this)
        }
    };
    $.fn.setInvisible = function(a) {
        a ? $(this).stop().animate({
            opacity: "0"
        }, 200, function() {
            $(this).css({
                visibility: "hidden"
            })
        }) : $(this).css({
            visibility: "hidden",
            opacity: "0"
        });
        return $(this)
    };
    $.fn.center = function() {
        this.css("position", "absolute");
        this.css("left", Math.max(0, ($(window).width() - this.outerWidth()) / 2) + "px");
        return this
    };
    $.fn.toggler = function(a, e) {
        var f = arguments,
            g = a.guid || $.guid++,
            h = 0,
            k = function(e) {
                var g = ($._data(this, "lastToggle" + a.guid) || 0) % h;
                $._data(this, "lastToggle" + a.guid, g + 1);
                e.preventDefault();
                return f[g].apply(this, arguments) || !1
            };
        for (k.guid = g; h < f.length;) f[h++].guid = g;
        return this.click(k)
    }
})();
Number.prototype.baseEncode = function(n) {
    var l;
    l = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".substring(0, n);
    var k;
    k = this + 0;
    if (0 === k) return "0";
    for (var q = ""; 0 < k;) q = l.charAt(k % n) + q, k = Math.floor(k / n);
    return q
};
String.prototype.baseDecode = function(n) {
    var l = this;
    for (b = c = (l === (/\W|_|^$/.test(l += "") || l)) - 1; d = l.charCodeAt(c++);) b = b * n + d - [, 48, 29, 87][d >> 5];
    return b
};

function replaceState(n, l) {
    n = n || {};
    window.history && history.replaceState && (window.history.replaceState(n, null, l), window.historyChanged = !0)
}

function pushState(n, l) {
    n = n || {};
    window.history && history.pushState && (window.history.pushState(n, null, l), window.historyChanged = !0)
}

function setCookie(n, l, k) {
    if (k) {
        var q = new Date;
        q.setTime(q.getTime() + 36E5 * k);
        k = "; expires=" + q.toGMTString()
    } else k = "";
    document.cookie = n + "=" + l + k + "; path=/"
}

function getCookie(n) {
    for (var n = n + "=", l = document.cookie.split(";"), k = 0; k < l.length; k++) {
        for (var q = l[k];
            " " == q.charAt(0);) q = q.substring(1, q.length);
        if (0 == q.indexOf(n)) return q.substring(n.length, q.length)
    }
    return null
}

function isMobile() {
    return /Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent)
}

function isWebGL() {
    return !!window.WebGLRenderingContext
}

function objToArray(n) {
    var l = [],
        k;
    for (k in n) l.push(n[k]);
    return l
};